#for nested {} comments
caseinsensitive
pairwords
 'BEGIN' 'CASE' 'TRY' 'RECORD' 'CLASS' 'OBJECT' 'INTERFACE' 'END'
 'REPEAT' 'UNTIL'

# COLORS font/paper
COLORS $586e75 $fdf6e3 $fdf6e3 cl_ltyellow $586e75 $fdf6e3 cl_white cl_ltblue

# base03    $002b36
# base01    $586e75
# base0     $839496
# base1     $93a1a1
# base2     $eee8d5
# base3     $fdf6e3
# red       $dc322f
# green     $859900
# cyan      $2aa198
# blue      $268bd2


styles
 default ''
 words 'b' $859900
 comment 'i' $93a1a1
 option '' $268bd2
 string '' $2aa198
 symbol '' $dc322f
 number '' $2aa198

keyworddefs pascal 
 'ABSOLUTE' 'ABSTRACT' 'AND' 'ARRAY' 'AS' 'ASM' 'ASSEMBLER' 'BEGIN'
 'BREAK' 'CASE' 'CDECL' 'CLASS' 'CONST' 'CONSTREF' 'CONSTRUCTOR'
 'CONTINUE' 'DEFAULT' 'DEPRECATED' 'DESTRUCTOR' 'DISPOSE' 'DIV' 'DO' 'DOWNTO'
 'ELSE' 'END' 'EXCEPT' 'EXIT' 'EXPORT' 'EXPORTS' 'EXTERNAL' 'FAIL'
 'FALSE' 'FAR' 'FILE' 'FINALIZATION' 'FINALLY' 'FOR' 'FORWARD' 'FUNCTION' 'GOTO'
 'IF' 'IMPLEMENTATION' 'IMPLEMENTS' 'IN' 'INHERITED'
 'INITIALIZATION' 'INLINE' 'INTERFACE' 'INTERRUPT' 'IS' 'LABEL' 'LIBRARY'
 'MOD' 'NEW' 'NIL' 'NODEFAULT' 'NOT' 'OBJECT'
 'OF' 'ON' 'OPERATOR' 'OR' 'OUT' 'OTHERWISE' 'OVERLOAD' 'OVERRIDE' 
 'PACKED' 'POPSTACK' 'PRIVATE' 
 'PROCEDURE' 'PROGRAM' 'PROTECTED'
 'PUBLIC' 'PUBLISHED' 'RAISE' 'RECORD' 'REINTRODUCE' 'REPEAT' 
 'RESOURCESTRING'
 'SELF' 'SET' 'SHL' 'SHR'
 'STDCALL' 'THEN' 'THREADVAR' 'TO' 'TRUE' 'TRY' 'TYPE' 'UNIT' 'UNTIL'
 'USES' 'VAR' 'VIRTUAL' 'WHILE' 'WITH' 'XOR'
 
keyworddefs property
 'DEFAULT' 'INDEX' 'READ' 'STORED' 'WRITE'
 
scope option option
 endtokens
  '}'
  
scope comment1 comment
 calltokens
  '{' comment1
 endtokens
  '}'

scope comment2 comment
 endtokens
  ''

scope comment3 comment
 endtokens
  '*)'
  
scope string string
 endtokens
  '''' ''

scope hexnumber
 jumptokens
  '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'A' 'B' 'C' 'D' 'E' 'F' hexnumber
 return

scope number
 jumptokens
  '$' hexnumber
  '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' number
 return

scope symbol1 symbol
 return

scope word
 jumptokens
  '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 
  'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 
  'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' '_' word
 return

scope property2 symbol
 return

scope property1 default
 keywords words
  property
 jumptokens
  ';' property2
 calltokens  
  '{$' option
  '{' comment1
  '//' comment2
  '(*' comment3
  '''' string
  '#' number string
  ':' symbol1
  '.' symbol1
  ',' symbol1
  '=' symbol1
  '<>' symbol1
  '<' symbol1
  '>' symbol1
  '(' symbol1
  ')' symbol1
  '+' symbol1
  '-' symbol1
  '/' symbol1
  '*' symbol1
  '[' symbol1
  ']' symbol1
  
  '$' hexnumber number
  '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' number number
  'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P'
  'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' '_' word

scope property words
 jumptokens
  property1
  
   
scope main

 keywords words
  pascal

 calltokens  
  '{$' option
  '{' comment1
  '//' comment2
  '(*' comment3
  '''' string
  '#' number string
  ':' symbol1
  '.' symbol1
  ';' symbol1
  ',' symbol1
  '=' symbol1
  '<>' symbol1
  '<' symbol1
  '>' symbol1
  '(' symbol1
  ')' symbol1
  '+' symbol1
  '-' symbol1
  '/' symbol1
  '*' symbol1
  '[' symbol1
  ']' symbol1
  .'property'. property
  
  '$' hexnumber number
  '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' number number
  'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P'
  'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' '_' word
  
